# Deploy Docker Registry in the cluster.
# Assumes an existing tls secret with name: k8-wildchard and a dns name: registry.k8.example.com which can point to a private IP address (one ore more of your k8 cluster nodes).
#
# Example, create a secret from let's encrypt wildchard certificates:
#   sudo certbot certonly --manual --preferred-challenges dns -d 'k8.example.com,*.k8.example.com'
#   kubectl create secret tls k8-wildchard --cert=/etc/letsencrypt/live/k8.example.com/fullchain.pem --key=/etc/letsencrypt/live/k8.example.com/privkey.pem
#
# Now deploy, using nfs shared storage, where the nfs drive is mounted locally (so k8deployer can create the directory on the nfs server).
#   k8deployer -d examples/registry.yaml -c deploy --storage nfs:192.168.1.1:/var/local/nfs/k8:/mnt/nfs/k8
#
# After deploying this, you can push and pull images to 'registry.k8.example.com:30123'

name: registry
kind: StatefulSet
args:
    image: registry:2
    port: >
        5000
    service.type: NodePort
    service.nodePort: >
      30123
    pod.env:
        REGISTRY_HTTP_ADDR=0.0.0.0:5000
        REGISTRY_HTTP_TLS_CERTIFICATE=/certs/tls.crt
        REGISTRY_HTTP_TLS_KEY=/certs/tls.key
    tls.secret: k8-wildchard

storage:
    - volume:
         name: data
         mountPath: /var/lib/registry
      capacity: 20Gi
      createVolume: true
